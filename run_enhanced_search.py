#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–æ–∏—Å–∫–æ–º –≤–º–µ—Å—Ç–æ Cloudinary
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
"""

import os
import sys
import logging
import shutil
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –º–æ–¥—É–ª—å —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
from enhanced_local_search import patch_bot_module, update_enhanced_index, initialize_enhanced_search

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
try:
    import torch
    import cv2
    import faiss
    from PIL import Image
    logger.info("‚úÖ –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –Ω–∞–π–¥–µ–Ω—ã")
except ImportError as e:
    logger.error(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç: {e}")
    print("–î–ª—è —Ä–∞–±–æ—Ç—ã —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã —Å–ª–µ–¥—É—é—â–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏:")
    print("- PyTorch (torch)")
    print("- OpenCV (cv2)")
    print("- FAISS (faiss-cpu)")
    print("- PIL (pillow)")
    sys.exit(1)

# –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –æ–±—Ä–∞–∑—Ü–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
SAMPLES_DIR = "sample_images"

def setup_sample_images():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –æ–±—Ä–∞–∑—Ü–∞–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"""
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if not os.path.exists(SAMPLES_DIR):
        os.makedirs(SAMPLES_DIR)
        logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è {SAMPLES_DIR}")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –±—Ä–µ–Ω–¥–æ–≤
    brands = ["Makita", "Oasis", "DeWalt", "Bosch", "Milwaukee", "–ò–Ω—Ç–µ—Ä—Å–∫–æ–ª", "Dexter"]
    for brand in brands:
        brand_dir = os.path.join(SAMPLES_DIR, brand)
        if not os.path.exists(brand_dir):
            os.makedirs(brand_dir)
            logger.info(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –±—Ä–µ–Ω–¥–∞ {brand}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ñ–æ—Ç–æ –≤ –±–∞–∑–µ
    image_files = []
    for ext in ['*.jpg', '*.jpeg', '*.png']:
        image_files.extend(list(Path(SAMPLES_DIR).glob(f'**/{ext}')))
    
    logger.info(f"–í –∫–∞—Ç–∞–ª–æ–≥–µ –æ–±—Ä–∞–∑—Ü–æ–≤ –Ω–∞–π–¥–µ–Ω–æ {len(image_files)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ photos_folder –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    from Bot_ebet import load_config
    config = load_config()
    photos_folder = config.get("photos_folder")
    
    if photos_folder and os.path.exists(photos_folder):
        logger.info(f"–ù–∞–π–¥–µ–Ω–∞ –æ—Å–Ω–æ–≤–Ω–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å —Ñ–æ—Ç–æ: {photos_folder}")
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if len(image_files) == 0:
            logger.info("–ö–æ–ø–∏—Ä—É—é –æ–±—Ä–∞–∑—Ü—ã –∏–∑ –æ—Å–Ω–æ–≤–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...")
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –∫–∞–∫–∏–µ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ photos_folder –Ω—É–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å
            base_folders = []
            for item in os.listdir(photos_folder):
                item_path = os.path.join(photos_folder, item)
                if os.path.isdir(item_path):
                    base_folders.append(item)
            
            # –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–∞, –∫–æ–ø–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –Ω–µ—ë
            if base_folders:
                for folder in base_folders:
                    src_dir = os.path.join(photos_folder, folder)
                    dest_dir = os.path.join(SAMPLES_DIR, folder)
                    
                    # –ö–æ–ø–∏—Ä—É–µ–º –¥–æ 20 —Ñ–∞–π–ª–æ–≤ –∏–∑ –∫–∞–∂–¥–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
                    copied = 0
                    for ext in ['*.jpg', '*.jpeg', '*.png']:
                        for file in Path(src_dir).glob(ext):
                            if copied >= 20:
                                break
                            
                            dest_file = os.path.join(dest_dir, file.name)
                            try:
                                if not os.path.exists(dest_dir):
                                    os.makedirs(dest_dir)
                                shutil.copy2(file, dest_file)
                                copied += 1
                            except Exception as e:
                                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ {file}: {e}")
                    
                    logger.info(f"–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ {copied} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ {folder}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–Ω–æ–≤–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–∞–π–ª–æ–≤
            image_files = []
            for ext in ['*.jpg', '*.jpeg', '*.png']:
                image_files.extend(list(Path(SAMPLES_DIR).glob(f'**/{ext}')))
            
            logger.info(f"–¢–µ–ø–µ—Ä—å –≤ –∫–∞—Ç–∞–ª–æ–≥–µ –æ–±—Ä–∞–∑—Ü–æ–≤ {len(image_files)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π")
    
    return len(image_files) > 0

if __name__ == "__main__":
    print("ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ª–æ–∫–∞–ª—å–Ω—ã–º –ø–æ–∏—Å–∫–æ–º...")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∫–∞—Ç–∞–ª–æ–≥ —Å –æ–±—Ä–∞–∑—Ü–∞–º–∏
    print("üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞ —Å –æ–±—Ä–∞–∑—Ü–∞–º–∏...")
    samples_ready = setup_sample_images()
    
    if not samples_ready:
        print("‚ö†Ô∏è –í –∫–∞—Ç–∞–ª–æ–≥–µ –æ–±—Ä–∞–∑—Ü–æ–≤ –Ω–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π! –ü–æ–∏—Å–∫ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
        print(f"–î–æ–±–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é {SAMPLES_DIR} –∏ –µ–≥–æ –ø–æ–¥–¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.")
        print("–ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –∑–∞–ø—É—Å–∫...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫
    print("üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞...")
    if initialize_enhanced_search():
        print("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫")
        sys.exit(1)
    
    # –ò–Ω–¥–µ–∫—Å–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    print(f"üîÑ –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ {SAMPLES_DIR}...")
    if update_enhanced_index(SAMPLES_DIR):
        print("‚úÖ –ò–Ω–¥–µ–∫—Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚ö†Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–∞, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å —Ç–µ–∫—É—â–∏–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º")
    
    # –ü–∞—Ç—á–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –±–æ—Ç–∞
    print("üîß –ó–∞–º–µ–Ω–∞ Cloudinary –Ω–∞ —É–ª—É—á—à–µ–Ω–Ω—ã–π –ª–æ–∫–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫...")
    if patch_bot_module():
        print("‚úÖ –ú–æ–¥—É–ª—å –±–æ—Ç–∞ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –º–æ–¥—É–ª—å –±–æ—Ç–∞")
        sys.exit(1)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    from Bot_ebet import main
    main() 