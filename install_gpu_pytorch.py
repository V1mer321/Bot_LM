#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ GPU –≤–µ—Ä—Å–∏–∏ PyTorch
"""

import subprocess
import sys
import platform

def check_nvidia_gpu():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ NVIDIA GPU"""
    try:
        result = subprocess.run(['nvidia-smi'], capture_output=True, text=True)
        return result.returncode == 0
    except FileNotFoundError:
        return False

def install_cuda_pytorch():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç CUDA –≤–µ—Ä—Å–∏—é PyTorch"""
    
    print("üöÄ –£–°–¢–ê–ù–û–í–ö–ê GPU –í–ï–†–°–ò–ò PYTORCH")
    print("="*50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ NVIDIA GPU
    if not check_nvidia_gpu():
        print("‚ùå NVIDIA GPU –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω –∏–ª–∏ –¥—Ä–∞–π–≤–µ—Ä—ã –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        print("   –£—Å—Ç–∞–Ω–æ–≤–∫–∞ GPU –≤–µ—Ä—Å–∏–∏ PyTorch –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞")
        return False
    
    print("‚úÖ NVIDIA GPU –æ–±–Ω–∞—Ä—É–∂–µ–Ω")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã CUDA
    print("\nüéØ –í—ã–±–µ—Ä–∏—Ç–µ –≤–µ—Ä—Å–∏—é CUDA:")
    print("1. CUDA 11.8 (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –¥–ª—è –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ GPU)")
    print("2. CUDA 12.1 (–¥–ª—è –Ω–æ–≤—ã—Ö GPU)")
    print("3. –û—Ç–º–µ–Ω–∞")
    
    while True:
        choice = input("\n–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (1-3): ").strip()
        
        if choice == "1":
            cuda_version = "cu118"
            url = "https://download.pytorch.org/whl/cu118"
            break
        elif choice == "2":
            cuda_version = "cu121"
            url = "https://download.pytorch.org/whl/cu121"
            break
        elif choice == "3":
            print("–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
            return False
        else:
            print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤—ã–±–æ—Ä. –í–≤–µ–¥–∏—Ç–µ 1, 2 –∏–ª–∏ 3")
    
    print(f"\nüîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é PyTorch —Å CUDA {cuda_version.replace('cu', '')}...")
    
    try:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é
        print("1Ô∏è‚É£ –£–¥–∞–ª—è—é —Å—Ç–∞—Ä—É—é –≤–µ—Ä—Å–∏—é PyTorch...")
        subprocess.run([
            sys.executable, "-m", "pip", "uninstall", 
            "torch", "torchvision", "torchaudio", "-y"
        ], check=True)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—É—é –≤–µ—Ä—Å–∏—é
        print("2Ô∏è‚É£ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é CUDA –≤–µ—Ä—Å–∏—é PyTorch...")
        subprocess.run([
            sys.executable, "-m", "pip", "install", 
            "torch", "torchvision", "torchaudio", 
            "--index-url", url
        ], check=True)
        
        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
        print("3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è—é —É—Å—Ç–∞–Ω–æ–≤–∫—É...")
        result = subprocess.run([
            sys.executable, "-c", 
            "import torch; print(f'CUDA –¥–æ—Å—Ç—É–ø–µ–Ω: {torch.cuda.is_available()}')"
        ], capture_output=True, text=True)
        
        if "CUDA –¥–æ—Å—Ç—É–ø–µ–Ω: True" in result.stdout:
            print("üéâ GPU —É—Å–∫–æ—Ä–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ!")
            print("   –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π")
            return True
        else:
            print("‚ö†Ô∏è CUDA –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω. –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã:")
            print("   - –ù–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–∞—è –≤–µ—Ä—Å–∏—è CUDA")
            print("   - –£—Å—Ç–∞—Ä–µ–≤—à–∏–µ –¥—Ä–∞–π–≤–µ—Ä—ã NVIDIA")
            return False
            
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ: {e}")
        return False

if __name__ == "__main__":
    success = install_cuda_pytorch()
    
    if success:
        print("\nüéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")
        print("2. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ - –¥–æ–ª–∂–Ω–æ –ø–æ—è–≤–∏—Ç—å—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ GPU")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ python check_gpu.py –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏")
    else:
        print("\nüí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤—ã:")
        print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ NVIDIA GPU")
        print("2. –û–±–Ω–æ–≤–∏—Ç–µ –¥—Ä–∞–π–≤–µ—Ä—ã NVIDIA")
        print("3. –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∏—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ CPU (–º–µ–¥–ª–µ–Ω–Ω–µ–µ, –Ω–æ —Å—Ç–∞–±–∏–ª—å–Ω–æ)")
    
    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...") 