import json
from cryptography.fernet import Fernet
import os


def generate_and_save_key():
    """Генерация и сохранение ключа шифрования"""
    key = Fernet.generate_key()
    with open("key.key", "wb") as key_file:
        key_file.write(key)
    return key


def load_key():
    """Загрузка ключа шифрования"""
    with open("key.key", "rb") as key_file:
        return key_file.read()


def encrypt_config(config_data):
    """Шифрование и сохранение конфигурации"""
    key = load_key()
    f = Fernet(key)
    encrypted_data = f.encrypt(json.dumps(config_data).encode())
    with open("config.encrypted", "wb") as config_file:
        config_file.write(encrypted_data)
    print("Конфигурация успешно создана и зашифрована")


# Конфигурационные данные
config_data = {
    "telegram_token": "7128449925:AAGz7uzZJ37Iy0mXoSgrlrRKk7LFcv_Q7W8",
    "lemanapro_api_key": "ВАШ_API_КЛЮЧ",
    "lemanapro_search_url": "https://lemanapro.ru/api/search",
    "table_2": "data/table_2.xlsx",
    "table_3": "data/table_3.xlsx",
    "les_ega_pdf": "data/les_ega.pdf",
    "skobyanka_table": "data/skobyanka.xlsx",
    "photos_folder": "data/banana",
    "whitelist": [2093834331, 5684611403, ],
    "admins": [2093834331]
}


# Проверяем существует ли ключ, если нет - создаем.
if not os.path.exists("key.key"):
    generate_and_save_key()


# Шифруем и сохраняем конфигурацию
encrypt_config(config_data)
