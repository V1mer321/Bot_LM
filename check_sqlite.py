#!/usr/bin/env python3
import sqlite3

def check_sqlite_db():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ SQLite –±–∞–∑—ã –ø–µ—Ä–µ–¥ –º–∏–≥—Ä–∞—Ü–∏–µ–π"""
    try:
        conn = sqlite3.connect('data/unified_products.db')
        cursor = conn.cursor()
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        cursor.execute('SELECT COUNT(*) FROM products')
        total = cursor.fetchone()[0]
        
        cursor.execute('SELECT COUNT(*) FROM products WHERE vector IS NOT NULL')
        with_vectors = cursor.fetchone()[0]
        
        print("‚úÖ SQLite –±–∞–∑–∞ –≥–æ—Ç–æ–≤–∞ –∫ –º–∏–≥—Ä–∞—Ü–∏–∏:")
        print(f"üì¶ –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {total}")
        print(f"üîÆ –° –≤–µ–∫—Ç–æ—Ä–∞–º–∏: {with_vectors}")
        print(f"üìä –ü—Ä–æ—Ü–µ–Ω—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏: {(with_vectors/total*100):.1f}%")
        
        # –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute('SELECT item_id, url FROM products WHERE vector IS NOT NULL LIMIT 3')
        samples = cursor.fetchall()
        print(f"üìÑ –ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤: {samples}")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ SQLite: {e}")
        return False

if __name__ == '__main__':
    check_sqlite_db() 