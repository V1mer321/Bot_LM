#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞ unified_products.db –≤ —Ñ–æ—Ä–º–∞—Ç TXT.
–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫—Ä–æ–º–µ –≤–µ–∫—Ç–æ—Ä–æ–≤ CLIP (–æ–Ω–∏ –±—É–¥—É—Ç –ø–µ—Ä–µ–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏).
"""
import sqlite3
import json
import os
from datetime import datetime

def export_to_txt():
    """–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –≤ TXT —Ñ–æ—Ä–º–∞—Ç"""
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        conn = sqlite3.connect('data/unified_products.db')
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
        cursor.execute('SELECT item_id, url, picture FROM products ORDER BY item_id')
        products = cursor.fetchall()
        
        print(f"üì¶ –ù–∞–π–¥–µ–Ω–æ {len(products)} —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞")
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è TXT —Ñ–∞–π–ª–æ–≤ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        txt_dir = 'data/txt_export'
        os.makedirs(txt_dir, exist_ok=True)
        
        # –≠–∫—Å–ø–æ—Ä—Ç –≤ –ø—Ä–æ—Å—Ç–æ–π TXT —Ñ–æ—Ä–º–∞—Ç (—Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–∏ - —Ç–∞–±—É–ª—è—Ü–∏—è)
        txt_file = os.path.join(txt_dir, 'unified_products.txt')
        with open(txt_file, 'w', encoding='utf-8') as f:
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫
            f.write("# Unified Products Database Export\n")
            f.write(f"# Exported: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            f.write(f"# Total products: {len(products)}\n")
            f.write("# Format: ITEM_ID<TAB>URL<TAB>PICTURE_URL\n")
            f.write("#" + "="*80 + "\n")
            
            # –î–∞–Ω–Ω—ã–µ
            for product in products:
                item_id, url, picture = product
                f.write(f"{item_id}\t{url or ''}\t{picture or ''}\n")
        
        print(f"‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤ TXT –∑–∞–≤–µ—Ä—à–µ–Ω: {txt_file}")
        
        # –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        json_file = os.path.join(txt_dir, 'unified_products.json')
        json_data = {
            "metadata": {
                "export_date": datetime.now().isoformat(),
                "total_products": len(products),
                "format_version": "1.0"
            },
            "products": []
        }
        
        for product in products:
            item_id, url, picture = product
            json_data["products"].append({
                "item_id": item_id,
                "url": url,
                "picture": picture
            })
        
        with open(json_file, 'w', encoding='utf-8') as f:
            json.dump(json_data, f, ensure_ascii=False, indent=2)
        
        print(f"‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤ JSON –∑–∞–≤–µ—Ä—à–µ–Ω: {json_file}")
        
        # –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV —Ñ–æ—Ä–º–∞—Ç
        csv_file = os.path.join(txt_dir, 'unified_products.csv')
        with open(csv_file, 'w', encoding='utf-8') as f:
            # –ó–∞–≥–æ–ª–æ–≤–æ–∫ CSV
            f.write("item_id,url,picture\n")
            
            # –î–∞–Ω–Ω—ã–µ (—ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∑–∞–ø—è—Ç—ã–µ –≤ URL)
            for product in products:
                item_id, url, picture = product
                # –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏ –∏ –∑–∞–ø—è—Ç—ã–µ –≤ CSV
                url_clean = (url or '').replace('"', '""')
                picture_clean = (picture or '').replace('"', '""')
                
                f.write(f'"{item_id}","{url_clean}","{picture_clean}"\n')
        
        print(f"‚úÖ –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV –∑–∞–≤–µ—Ä—à–µ–Ω: {csv_file}")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π TXT —Ñ–∞–π–ª —Å —Ç–æ–ª—å–∫–æ ID –∏ URL (–¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞)
        simple_txt_file = os.path.join(txt_dir, 'products_simple.txt')
        with open(simple_txt_file, 'w', encoding='utf-8') as f:
            f.write("# Simplified Products List\n")
            f.write("# Format: ITEM_ID - URL\n")
            f.write("#" + "="*50 + "\n")
            
            for product in products:
                item_id, url, picture = product
                f.write(f"{item_id} - {url or 'NO_URL'}\n")
        
        print(f"‚úÖ –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π TXT –∑–∞–≤–µ—Ä—à–µ–Ω: {simple_txt_file}")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞:")
        print(f"- –í—Å–µ–≥–æ —Ç–æ–≤–∞—Ä–æ–≤: {len(products)}")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        with_pictures = sum(1 for p in products if p[2])
        print(f"- –° –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {with_pictures}")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã —Å URL
        with_urls = sum(1 for p in products if p[1])
        print(f"- –° URL: {with_urls}")
        
        # –†–∞–∑–º–µ—Ä—ã —Ñ–∞–π–ª–æ–≤
        for file_path in [txt_file, json_file, csv_file, simple_txt_file]:
            size_mb = os.path.getsize(file_path) / (1024 * 1024)
            print(f"- {os.path.basename(file_path)}: {size_mb:.2f} MB")
        
        conn.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == '__main__':
    export_to_txt() 