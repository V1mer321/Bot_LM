"""
ToolBot - –æ—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""
import os
import logging
import asyncio
import sys
import traceback
import importlib.util
import torch
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ConversationHandler, CallbackQueryHandler

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –ø–æ–≤—ã—à–µ–Ω–∏—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
from toolbot.utils.enhanced_logging import setup_logging, LogLevel, LogFormat, get_logger
from toolbot.utils.error_handler import ErrorSeverity, error_handler_instance, async_error_handler, error_handler
from toolbot.utils.recovery import RecoveryManager, ComponentState, register_component

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ telebot
from toolbot.utils.telebot_compatibility import create_telebot

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
setup_logging(
    console_level=LogLevel.INFO,
    file_level=LogLevel.DEBUG,
    console_format=LogFormat.SIMPLE,
    file_format=LogFormat.DETAILED,
    log_dir="logs"
)

# –ü–æ–ª—É—á–∞–µ–º –ª–æ–≥–≥–µ—Ä –¥–ª—è –º–æ–¥—É–ª—è
logger = get_logger(__name__)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω—É–∂–Ω—ã–µ –º–æ–¥—É–ª–∏
from toolbot.config import load_config
from toolbot.services.analytics import Analytics

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —É–ª—É—á—à–µ–Ω–∏–π
from toolbot.utils.model_optimizer import get_model_optimizer
from toolbot.utils.light_models import get_optimized_detector

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω–µ–≤—ã–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º
import sys
import os
sys.path.insert(0, os.path.dirname(os.path.dirname(__file__)))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
from toolbot.handlers.common import start_handler, help_handler, stop_handler, back_to_menu_handler
from toolbot.handlers.admin import (admin_panel_handler, user_management_handler, add_user_handler,
                                  remove_user_handler, list_users_handler, 
                                  back_to_admin_panel_handler,
                                  feedback_management_handler, feedback_stats_button_handler,
                                  errors_button_handler, suggestions_button_handler,
                                  back_to_feedback_handler, add_admin_handler,
                                  search_statistics_handler, detailed_search_stats_handler,
                                  recent_complaints_handler, user_activity_handler,
                                  active_users_handler, all_users_handler,
                                  search_user_handler, activity_stats_handler,
                                  update_databases_handler)
from toolbot.handlers.contacts import (contacts_handler, stores_handler, maps_handler,
                                     skobyanka_handler, back_to_contacts_handler)
# –ò—Å–ø–æ–ª—å–∑—É–µ–º –†–ï–ê–õ–¨–ù–´–ô photo_handler –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Å unified_products.db
from handlers.photo_handler import (handle_photo as photo_handler, 
                                  handle_not_my_item_callback, handle_add_comment_callback,
                                  handle_try_another_photo_callback, handle_contact_support_callback,
                                  handle_text_message)
# –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏  
from toolbot.handlers.photo_handler import photo_search_handler, department_selection_handler, back_to_departments_handler
from toolbot.handlers.text_handler import text_handler
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
from toolbot.handlers.feedback_handlers import (report_error_handler, suggest_improvement_handler,
                                                process_error_report, process_improvement_suggestion,
                                                cancel_feedback_handler, view_feedback_stats_handler,
                                                view_errors_handler, view_suggestions_handler,
                                                handle_error_status_callback, handle_suggestion_status_callback,
                                                handle_suggestion_priority_callback, handle_show_full_error_callback,
                                                handle_show_full_suggestion_callback)

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
from toolbot.handlers.reliability_handlers import (
    error_stats_handler, components_status_handler, 
    test_recovery_handler, logs_handler
)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –∏–∑ utils/access.py
from toolbot.utils.access import is_allowed_user

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ ONNX Runtime
def check_onnx_available():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å ONNX Runtime –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π"""
    try:
        import onnxruntime
        logger.info(f"‚úÖ ONNX Runtime –¥–æ—Å—Ç—É–ø–µ–Ω (–≤–µ—Ä—Å–∏—è {onnxruntime.__version__})")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã (–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏)
        providers = onnxruntime.get_available_providers()
        logger.info(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—ã ONNX: {', '.join(providers)}")
        
        return True
    except ImportError:
        logger.warning("‚ö†Ô∏è ONNX Runtime –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π –±—É–¥–µ—Ç –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞.")
        return False

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π
@error_handler(severity=ErrorSeverity.MEDIUM)
def initialize_models():
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è"""
    try:
        logger.info("–ù–∞—á–∏–Ω–∞–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ GPU
        gpu_available = torch.cuda.is_available()
        if gpu_available:
            gpu_name = torch.cuda.get_device_name(0)
            gpu_memory = torch.cuda.get_device_properties(0).total_memory / (1024**3)
            logger.info(f"‚úÖ –û–±–Ω–∞—Ä—É–∂–µ–Ω GPU: {gpu_name} ({gpu_memory:.2f} –ì–ë)")
            logger.info("üöÄ ML-–º–æ–¥–µ–ª–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å GPU —É—Å–∫–æ—Ä–µ–Ω–∏–µ–º!")
        else:
            logger.info("‚ö†Ô∏è GPU –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω. –ë—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω CPU –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.")
            logger.info("üí° –î–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ CUDA –≤–µ—Ä—Å–∏—é PyTorch:")
            logger.info("   pip install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu118")
            logger.info("   –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python check_gpu.py –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å ONNX Runtime
        onnx_available = check_onnx_available()
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–µ–≥–∫–∏–µ –º–æ–¥–µ–ª–∏ –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏
            mobilenet_detector = get_optimized_detector("mobilenet")
            logger.info(f"‚úÖ –ú–æ–¥–µ–ª—å MobileNetV3 —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è EfficientDet —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω ONNX
            if onnx_available:
                efficientdet_detector = get_optimized_detector("efficientdet")
                logger.info(f"‚úÖ –ú–æ–¥–µ–ª—å EfficientDet-Lite —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ª–µ–≥–∫–∏—Ö –º–æ–¥–µ–ª–µ–π: {e}")
        
        logger.info("‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
        return True
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥–µ–ª–µ–π: {e}")
        return False

def register_handlers(application):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞"""
    try:
        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
        application.add_handler(CommandHandler("start", start_handler))
        application.add_handler(CommandHandler("help", help_handler))
        application.add_handler(CommandHandler("stop", stop_handler))
        application.add_handler(CommandHandler("admin", admin_panel_handler))
        
        # –ö–Ω–æ–ø–∫–∏ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
        application.add_handler(MessageHandler(filters.Regex("^‚ùì –ü–æ–º–æ—â—å$"), help_handler))
        application.add_handler(MessageHandler(filters.Regex("^üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã$"), contacts_handler))
        application.add_handler(MessageHandler(filters.Regex("^üì∏ –ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ$"), photo_search_handler))
        
        # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        application.add_handler(MessageHandler(filters.Regex("^üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é$"), back_to_menu_handler))
        
        # –ö–Ω–æ–ø–∫–∏ —Ä–∞–∑–¥–µ–ª–∞ –∫–æ–Ω—Ç–∞–∫—Ç–æ–≤
        application.add_handler(MessageHandler(filters.Regex("^üè™ –ú–∞–≥–∞–∑–∏–Ω—ã$"), stores_handler))
        application.add_handler(MessageHandler(filters.Regex("^üó∫ –ö–∞—Ä—Ç—ã$"), maps_handler))
        application.add_handler(MessageHandler(filters.Regex("^üîß –°–∫–æ–±—è–Ω–∫–∞$"), skobyanka_handler))
        application.add_handler(MessageHandler(filters.Regex("^üîô –ù–∞–∑–∞–¥ –≤ –∫–æ–Ω—Ç–∞–∫—Ç—ã$"), back_to_contacts_handler))
        
        # –ö–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ –æ—Ç–¥–µ–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —Ñ–æ—Ç–æ
        application.add_handler(MessageHandler(filters.Regex("^üß± –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã$|^ü™ë –°—Ç–æ–ª—è—Ä–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è$|^‚ö° –≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä—ã$|^üî® –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã$|^üè† –ù–∞–ø–æ–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è$|^üß± –ü–ª–∏—Ç–∫–∞$|^üöΩ –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞$|^üöø –í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ$|^üå± –°–∞–¥$|^üî© –°–∫–æ–±—è–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è$|^üé® –ö—Ä–∞—Å–∫–∏$|^‚ú® –û—Ç–¥–µ–ª–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã$|^üí° –°–≤–µ—Ç$|^üì¶ –•—Ä–∞–Ω–µ–Ω–∏–µ$|^üç≥ –ö—É—Ö–Ω–∏$"), department_selection_handler))
        application.add_handler(MessageHandler(filters.Regex("^üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –æ—Ç–¥–µ–ª–∞$"), back_to_departments_handler))
        
        # –ö–Ω–æ–ø–∫–∏ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
        application.add_handler(MessageHandler(filters.Regex("^üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏$"), user_management_handler))
        application.add_handler(MessageHandler(filters.Regex("^üí¨ –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å$"), feedback_management_handler))
        application.add_handler(MessageHandler(filters.Regex("^üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–∏—Å–∫–∞$"), search_statistics_handler))
        application.add_handler(MessageHandler(filters.Regex("^üëÄ –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π$"), user_activity_handler))
        application.add_handler(MessageHandler(filters.Regex("^üëë –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞$"), add_admin_handler))
        application.add_handler(MessageHandler(filters.Regex("^üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–∑—ã$"), update_databases_handler))
        application.add_handler(MessageHandler(filters.Regex("^üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π$"), list_users_handler))
        application.add_handler(MessageHandler(filters.Regex("^‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è$"), add_user_handler))
        application.add_handler(MessageHandler(filters.Regex("^‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è$"), remove_user_handler))
        application.add_handler(MessageHandler(filters.Regex("^üîô –ù–∞–∑–∞–¥ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å$"), back_to_admin_panel_handler))
        
        # –ö–Ω–æ–ø–∫–∏ —Ä–∞–∑–¥–µ–ª–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        application.add_handler(MessageHandler(filters.Regex("^üìà –ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏$"), active_users_handler))
        application.add_handler(MessageHandler(filters.Regex("^üìã –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏$"), all_users_handler))
        application.add_handler(MessageHandler(filters.Regex("^üîç –ü–æ–∏—Å–∫ –ø–æ ID$"), search_user_handler))
        application.add_handler(MessageHandler(filters.Regex("^üìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞$"), activity_stats_handler))
        
        # –ö–Ω–æ–ø–∫–∏ —Ä–∞–∑–¥–µ–ª–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–∏—Å–∫–∞
        application.add_handler(MessageHandler(filters.Regex("^üìã –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞$"), detailed_search_stats_handler))
        application.add_handler(MessageHandler(filters.Regex("^üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ$"), search_statistics_handler))
        application.add_handler(MessageHandler(filters.Regex("^üìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∂–∞–ª–æ–±—ã$"), recent_complaints_handler))
        application.add_handler(MessageHandler(filters.Regex("^üìà –¢—Ä–µ–Ω–¥—ã –ø–æ–∏—Å–∫–∞$"), search_statistics_handler))
        
        # –ö–Ω–æ–ø–∫–∏ —Ä–∞–∑–¥–µ–ª–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
        application.add_handler(MessageHandler(filters.Regex("^üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏$"), feedback_stats_button_handler))
        application.add_handler(MessageHandler(filters.Regex("^üêõ –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—à–∏–±–æ–∫$"), errors_button_handler))
        application.add_handler(MessageHandler(filters.Regex("^üí° –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π$"), suggestions_button_handler))
        application.add_handler(MessageHandler(filters.Regex("^üîô –ù–∞–∑–∞–¥ –∫ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏$"), back_to_feedback_handler))
        
        # –ö–Ω–æ–ø–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        application.add_handler(MessageHandler(filters.Regex("^üêõ –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ$"), report_error_handler))
        application.add_handler(MessageHandler(filters.Regex("^üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ$"), suggest_improvement_handler))
        application.add_handler(MessageHandler(filters.Regex("^‚ùå –û—Ç–º–µ–Ω–∞$"), cancel_feedback_handler))
        
        # Callback handlers –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞–º–∏
        application.add_handler(CallbackQueryHandler(handle_error_status_callback, pattern=r"^error_status_\d+_"))
        application.add_handler(CallbackQueryHandler(handle_suggestion_status_callback, pattern=r"^suggestion_status_\d+_"))
        application.add_handler(CallbackQueryHandler(handle_suggestion_priority_callback, pattern=r"^suggestion_priority_\d+_"))
        application.add_handler(CallbackQueryHandler(handle_show_full_error_callback, pattern=r"^error_full_\d+$"))
        application.add_handler(CallbackQueryHandler(handle_show_full_suggestion_callback, pattern=r"^suggestion_full_\d+$"))
        
        # Callback handlers –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –ø–æ –ø–æ–∏—Å–∫—É
        application.add_handler(CallbackQueryHandler(handle_not_my_item_callback, pattern=r"^not_my_item_"))
        application.add_handler(CallbackQueryHandler(handle_add_comment_callback, pattern=r"^add_comment_"))
        application.add_handler(CallbackQueryHandler(handle_try_another_photo_callback, pattern=r"^try_another_photo$"))
        application.add_handler(CallbackQueryHandler(handle_contact_support_callback, pattern=r"^contact_support$"))
        
        # –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ (–æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å)
        application.add_handler(CommandHandler("feedback_stats", view_feedback_stats_handler))
        application.add_handler(CommandHandler("view_errors", view_errors_handler))
        application.add_handler(CommandHandler("view_suggestions", view_suggestions_handler))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π (–∏—Å–ø–æ–ª—å–∑—É–µ–º toolbot.handlers.photo_handler)
        application.add_handler(MessageHandler(filters.PHOTO, photo_handler))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        application.add_handler(CommandHandler("error_stats", error_stats_handler))
        application.add_handler(CommandHandler("components_status", components_status_handler))
        application.add_handler(CommandHandler("test_recovery", test_recovery_handler))
        application.add_handler(CommandHandler("logs", logs_handler))
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–º)
        application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message))
        
        logger.info("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {e}")
        raise


# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–¥–æ—Ä–æ–≤—å—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
def check_bot_health():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –±–æ—Ç–∞"""
    try:
        # –ë–∞–∑–æ–≤—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
        if not os.path.exists("config.encrypted"):
            logger.warning("–§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return False
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Redis, –µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è
        if os.environ.get("ENABLE_REDIS", "false").lower() == "true":
            try:
                import redis
                redis_host = os.environ.get("REDIS_HOST", "localhost") 
                redis_port = int(os.environ.get("REDIS_PORT", 6379))
                r = redis.Redis(host=redis_host, port=redis_port)
                r.ping()
                logger.debug("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Redis —É—Å–ø–µ—à–Ω–æ")
            except Exception as e:
                logger.warning(f"–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Redis –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ: {e}")
        # Redis –æ—Ç–∫–ª—é—á–µ–Ω - —Ä–∞–±–æ—Ç–∞–µ–º –±–µ–∑ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
        
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–¥–æ—Ä–æ–≤—å—è –±–æ—Ç–∞: {e}")
        return False


# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞
def restart_bot():
    """–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞"""
    try:
        logger.info("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞...")
        
        # –ï—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –≤ Docker, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é
        if os.environ.get("PRODUCTION") == "1":
            logger.info("–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ä–µ–¥–∞ Docker, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞")
            # –í Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ–±—ã—á–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
            os.kill(os.getpid(), 15)  # SIGTERM
            return True
            
        # –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        return False


@error_handler(severity=ErrorSeverity.CRITICAL)
def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    try:
        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é - —Å–Ω–∞—á–∞–ª–∞ –∏–∑ –º–æ–¥—É–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞, –ø–æ—Ç–æ–º –∏–∑ toolbot
        local_config = None
        
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ config.py –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞
            sys.path.insert(0, os.getcwd())
            import config as config_module
            local_config = config_module.load_config()
            logger.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ –∏–∑ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ config.py")
        except (ImportError, AttributeError) as e:
            logger.warning(f"–õ–æ–∫–∞–ª—å–Ω—ã–π config.py –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: {e}")
            local_config = None
            
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑ –∫–æ—Ä–Ω—è, –ø—Ä–æ–±—É–µ–º –∏–∑ –º–æ–¥—É–ª—è toolbot
        if not local_config:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏,
            # –Ω–æ –Ω–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
            if not os.path.exists("config.encrypted"):
                logger.warning("‚ùå –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–∞–π–ª 'config.encrypted' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            else:
                # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
                try:
                    config = load_config()
                    if not config:
                        logger.warning("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ encrypted —Ñ–∞–π–ª–∞.")
                except Exception as e:
                    logger.warning(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
                    config = None
        else:
            config = local_config

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –Ω–∞—Å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
        if not config:
            logger.error("‚ùå –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –∏–∑-–∑–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.")
            return

        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        token = config.get("telegram_token")
        if not token:
            logger.error("‚ùå –¢–æ–∫–µ–Ω Telegram –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.")
            return
            
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        analytics = Analytics()
        logger.info("‚úÖ –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π –¥–ª—è –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏—è –æ–±—ä–µ–∫—Ç–æ–≤
        initialize_models()
        
        # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è UnifiedDatabaseService –∏–∑ handlers/photo_handler.py
        # –°—Ç–∞—Ä—ã–π —Å–µ—Ä–≤–∏—Å improved_database_search –±–æ–ª—å—à–µ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è
        logger.info("‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è UnifiedDatabaseService –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º")
        
        # –°–æ–∑–¥–∞–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        application = Application.builder().token(config["telegram_token"]).build()
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ TeleBot –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏
        telebot_instance = create_telebot(application)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –≤ –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
        global _telebot_instance
        _telebot_instance = telebot_instance
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –±–æ—Ç–∞
        application.bot_data['analytics'] = analytics
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
        register_handlers(application)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º UI –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏, –µ—Å–ª–∏ –º–æ–¥—É–ª—å –¥–æ—Å—Ç—É–ø–µ–Ω
        try:
            from toolbot.handlers.ui_handlers import register_ui_handlers
            register_ui_handlers(telebot_instance)
            logger.info("‚úÖ UI –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã")
        except ImportError as e:
            logger.warning(f"–ú–æ–¥—É–ª—å UI –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {e}")
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        recovery_manager = RecoveryManager.get_instance()
        register_component("telegram_bot", restart_bot, check_bot_health)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–ø—É—Å–∫ –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ
        is_docker = os.path.exists("/.dockerenv") or os.environ.get("PRODUCTION") == "1"
        if is_docker:
            logger.info("üê≥ –ó–∞–ø—É—Å–∫ –≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ")
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ "–∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è"
        recovery_manager.set_component_state("telegram_bot", ComponentState.STARTING)
        
        # –ó–∞–ø—É—Å–∫ —Å—Ç–æ—Ä–æ–∂–µ–≤–æ–≥–æ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        recovery_manager.start_watchdog(check_interval=60)
        
        # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
        
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ "—Ä–∞–±–æ—Ç–∞–µ—Ç"
        recovery_manager.set_component_state("telegram_bot", ComponentState.RUNNING)
        
        # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram
        application.run_polling(allowed_updates=Update.ALL_TYPES)
        
    except Exception as e:
        logger.critical(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
        logger.critical(traceback.format_exc())
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –≤ –æ—à–∏–±–∫—É
        try:
            recovery_manager = RecoveryManager.get_instance()
            recovery_manager.set_component_state("telegram_bot", ComponentState.ERROR, 
                                               f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        except:
            pass
        
        # –ü—Ä–æ–±—Ä–∞—Å—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–∞–ª—å—à–µ
        raise


# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ telebot
_telebot_instance = None

def get_telebot_instance():
    """–ü–æ–ª—É—á–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä TeleBot –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ UI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö"""
    global _telebot_instance
    return _telebot_instance


if __name__ == '__main__':
    try:
        logger.info("–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        main()
    except KeyboardInterrupt:
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.critical(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        logger.critical(traceback.format_exc())
        sys.exit(1) 