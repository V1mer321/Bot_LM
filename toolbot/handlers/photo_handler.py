"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞
"""
import os
import logging
import traceback
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
import asyncio

from toolbot.utils.access import is_allowed_user
from toolbot.config import is_admin  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –∞–¥–º–∏–Ω-–ø—Ä–æ–≤–µ—Ä–æ–∫
from toolbot.utils.image_utils import preprocess_image_for_search, extract_tool_by_bbox
from toolbot.utils.file_utils import TempFileManager
from toolbot.utils.rate_limiter import check_rate_limit
from toolbot.utils.async_processor import process_multiple
from config import load_config

logger = logging.getLogger(__name__)

# –õ–µ–Ω–∏–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
_image_search_initialized = False

def get_image_search_functions():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ª–µ–Ω–∏–≤–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–µ–π"""
    global _image_search_initialized
    
    if not _image_search_initialized:
        try:
            # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏
            from toolbot.services.image_search import (
                initialize_image_search, update_image_index, find_similar_images, 
                enhanced_image_search, classify_tool_type, detect_brand_by_color,
                detect_brand_from_filename, detect_tools_on_image
            )
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
            logger.info("–õ–µ–Ω–∏–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
            success = initialize_image_search()
            if success:
                logger.info("‚úì –°–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
                _image_search_initialized = True
            else:
                logger.warning("‚ö† –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")
                
            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
            return {
                'initialize_image_search': initialize_image_search,
                'update_image_index': update_image_index,
                'find_similar_images': find_similar_images,
                'enhanced_image_search': enhanced_image_search,
                'classify_tool_type': classify_tool_type,
                'detect_brand_by_color': detect_brand_by_color,
                'detect_brand_from_filename': detect_brand_from_filename,
                'detect_tools_on_image': detect_tools_on_image
            }
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–µ–Ω–∏–≤–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏: {str(e)}")
            logger.debug(traceback.format_exc())
            return None
    else:
        # –ï—Å–ª–∏ —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ—Å—Ç–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
        from toolbot.services.image_search import (
            initialize_image_search, update_image_index, find_similar_images, 
            enhanced_image_search, classify_tool_type, detect_brand_by_color,
            detect_brand_from_filename, detect_tools_on_image
        )
        
        return {
            'initialize_image_search': initialize_image_search,
            'update_image_index': update_image_index,
            'find_similar_images': find_similar_images,
            'enhanced_image_search': enhanced_image_search,
            'classify_tool_type': classify_tool_type,
            'detect_brand_by_color': detect_brand_by_color,
            'detect_brand_from_filename': detect_brand_from_filename,
            'detect_tools_on_image': detect_tools_on_image
        }

async def photo_search_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ —Ñ–æ—Ç–æ
    """
    user_id = update.effective_user.id
    
    if not is_allowed_user(user_id):
        from toolbot.handlers.common import show_error_message
        await show_error_message(update, "access_denied")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
    is_allowed, wait_time = check_rate_limit(user_id, "general")
    if not is_allowed:
        wait_time_rounded = round(wait_time, 1)
        await update.message.reply_text(
            f"‚è± –í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤.\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ {wait_time_rounded} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º."
        )
        return
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    analytics = context.bot_data.get('analytics')
    if analytics:
        analytics.log_command("photo_search", user_id)
    
    # –û—Ç–∫–ª—é—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ, –µ—Å–ª–∏ –±—ã–ª –∞–∫—Ç–∏–≤–µ–Ω
    context.user_data["state"] = 'selecting_department'
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –æ—Ç–¥–µ–ª–∞
    keyboard = [
        ["üß± –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã", "ü™ë –°—Ç–æ–ª—è—Ä–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è"],
        ["‚ö° –≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä—ã", "üî® –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã"],
        ["üè† –ù–∞–ø–æ–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è", "üß± –ü–ª–∏—Ç–∫–∞"],
        ["üöΩ –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞", "üöø –í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ"],
        ["üå± –°–∞–¥", "üî© –°–∫–æ–±—è–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è"],
        ["üé® –ö—Ä–∞—Å–∫–∏", "‚ú® –û—Ç–¥–µ–ª–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"],
        ["üí° –°–≤–µ—Ç", "üì¶ –•—Ä–∞–Ω–µ–Ω–∏–µ"],
        ["üç≥ –ö—É—Ö–Ω–∏"],
        ["üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π –≤—ã–±–æ—Ä–∞ –æ—Ç–¥–µ–ª–∞
    await update.message.reply_text(
        "üì∏ *–ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ*\n\n"
        "–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö–æ—Ç–∏—Ç–µ –∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä:\n"
        "‚Ä¢ üß± –°—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã - —Ü–µ–º–µ–Ω—Ç, –≥–∏–ø—Å, —à—Ç—É–∫–∞—Ç—É—Ä–∫–∞ –∏ —Ç.–¥.\n"
        "‚Ä¢ ü™ë –°—Ç–æ–ª—è—Ä–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è - –¥–µ—Ä–µ–≤–æ–æ–±—Ä–∞–±–æ—Ç–∫–∞, —Ñ–∞–Ω–µ—Ä–∞ –∏ —Ç.–¥.\n"
        "‚Ä¢ ‚ö° –≠–ª–µ–∫—Ç—Ä–æ—Ç–æ–≤–∞—Ä—ã - —Ä–æ–∑–µ—Ç–∫–∏, –ø—Ä–æ–≤–æ–¥–∞, –≤—ã–∫–ª—é—á–∞—Ç–µ–ª–∏ –∏ —Ç.–¥.\n"
        "‚Ä¢ üî® –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã - –≤—Å–µ –≤–∏–¥—ã –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤\n"
        "‚Ä¢ üè† –ù–∞–ø–æ–ª—å–Ω—ã–µ –ø–æ–∫—Ä—ã—Ç–∏—è - –ª–∞–º–∏–Ω–∞—Ç, –ø–∞—Ä–∫–µ—Ç, –ª–∏–Ω–æ–ª–µ—É–º –∏ —Ç.–¥.\n"
        "‚Ä¢ üß± –ü–ª–∏—Ç–∫–∞ - –∫–µ—Ä–∞–º–∏—á–µ—Å–∫–∞—è, –∫–µ—Ä–∞–º–æ–≥—Ä–∞–Ω–∏—Ç –∏ —Ç.–¥.\n"
        "‚Ä¢ üöΩ –°–∞–Ω—Ç–µ—Ö–Ω–∏–∫–∞ - —É–Ω–∏—Ç–∞–∑—ã, —Ä–∞–∫–æ–≤–∏–Ω—ã, –≤–∞–Ω–Ω—ã –∏ —Ç.–¥.\n"
        "‚Ä¢ üöø –í–æ–¥–æ—Å–Ω–∞–±–∂–µ–Ω–∏–µ - —Ç—Ä—É–±—ã, –∫—Ä–∞–Ω—ã, —Ñ–∏—Ç–∏–Ω–≥–∏ –∏ —Ç.–¥.\n"
        "‚Ä¢ üå± –°–∞–¥ - —Ç–æ–≤–∞—Ä—ã –¥–ª—è —Å–∞–¥–∞ –∏ –æ–≥–æ—Ä–æ–¥–∞\n"
        "‚Ä¢ üî© –°–∫–æ–±—è–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è - –º–µ—Ç–∏–∑—ã, –∫—Ä–µ–ø–µ–∂–∏, —Ñ—É—Ä–Ω–∏—Ç—É—Ä–∞ –∏ —Ç.–¥.\n"
        "‚Ä¢ üé® –ö—Ä–∞—Å–∫–∏ - –∫—Ä–∞—Å–∫–∏, —ç–º–∞–ª–∏, –ª–∞–∫–∏ –∏ —Ç.–¥.\n"
        "‚Ä¢ ‚ú® –û—Ç–¥–µ–ª–æ—á–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã - –æ–±–æ–∏, –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —à—Ç—É–∫–∞—Ç—É—Ä–∫–∞ –∏ —Ç.–¥.\n"
        "‚Ä¢ üí° –°–≤–µ—Ç - –ª–∞–º–ø—ã, —Å–≤–µ—Ç–∏–ª—å–Ω–∏–∫–∏ –∏ —Ç.–¥.\n"
        "‚Ä¢ üì¶ –•—Ä–∞–Ω–µ–Ω–∏–µ - –ø–æ–ª–∫–∏, —è—â–∏–∫–∏, —Å—Ç–µ–ª–ª–∞–∂–∏ –∏ —Ç.–¥.\n"
        "‚Ä¢ üç≥ –ö—É—Ö–Ω–∏ - –∫—É—Ö–æ–Ω–Ω–∞—è –º–µ–±–µ–ª—å –∏ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã\n\n"
        "üí° –í—ã–±–æ—Ä –æ—Ç–¥–µ–ª–∞ –ø–æ–º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –±–æ–ª–µ–µ —Ç–æ—á–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def department_selection_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –æ—Ç–¥–µ–ª–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —Ñ–æ—Ç–æ
    """
    user_id = update.effective_user.id
    
    if not is_allowed_user(user_id):
        from toolbot.handlers.common import show_error_message
        await show_error_message(update, "access_denied")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏
    is_allowed, wait_time = check_rate_limit(user_id, "general")
    if not is_allowed:
        wait_time_rounded = round(wait_time, 1)
        await update.message.reply_text(
            f"‚è± –í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Å–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤.\n"
            f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ {wait_time_rounded} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ø—Ä–æ—Å–æ–º."
        )
        return
    
    selected_department = update.message.text
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–¥–µ–ª –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    context.user_data["selected_department"] = selected_department
    
    # –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    context.user_data["state"] = "awaiting_photo"
    
    # –ü–æ–ª—É—á–∞–µ–º —ç–º–æ–¥–∑–∏ –æ—Ç–¥–µ–ª–∞
    department_emoji = selected_department.split()[0]
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–º–µ–Ω—ã
    keyboard = [["üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –æ—Ç–¥–µ–ª–∞"], ["üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –æ—Ç–¥–µ–ª–∞
    analytics = context.bot_data.get('analytics')
    if analytics:
        analytics.log_command(f"photo_search_{selected_department}", user_id)
    
    await update.message.reply_text(
        f"{department_emoji} *–ü–æ–∏—Å–∫ –≤ –æ—Ç–¥–µ–ª–µ {selected_department}*\n\n"
        f"–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞.\n\n"
        f"üí° –°–æ–≤–µ—Ç—ã –¥–ª—è –ª—É—á—à–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞:\n"
        f"‚Ä¢ –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ –≤ —Ö–æ—Ä–æ—à–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏\n"
        f"‚Ä¢ –î–µ—Ä–∂–∏—Ç–µ –∫–∞–º–µ—Ä—É –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Ç–æ–≤–∞—Ä—É\n"
        f"‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ —Ç–µ–Ω–µ–π –∏ –æ—Ç—Ä–∞–∂–µ–Ω–∏–π\n"
        f"‚Ä¢ –°–ª–µ–¥–∏—Ç–µ, —á—Ç–æ–±—ã —Ç–æ–≤–∞—Ä –∑–∞–Ω–∏–º–∞–ª –±–æ–ª—å—à—É—é —á–∞—Å—Ç—å –∫–∞–¥—Ä–∞",
        reply_markup=reply_markup,
        parse_mode='Markdown'
    )


async def back_to_departments_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∫ –≤—ã–±–æ—Ä—É –æ—Ç–¥–µ–ª–∞"""
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ç–µ–∫—É—â–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    context.user_data["state"] = None
    
    # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–∏—Å–∫–∞ –ø–æ —Ñ–æ—Ç–æ –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é –æ—Ç–¥–µ–ª–æ–≤
    await photo_search_handler(update, context)


async def photo_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    """
    user_id = update.effective_user.id
    username = update.effective_user.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Ñ–æ—Ç–æ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    analytics = context.bot_data.get('analytics')
    if analytics:
        analytics.log_user_activity(user_id, "photo_received", f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{username} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ –¥–ª—è –ø–æ–∏—Å–∫–∞")
    
    if not is_allowed_user(user_id):
        from toolbot.handlers.common import show_error_message
        await show_error_message(update, "access_denied")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    if context.user_data.get('state') != 'awaiting_photo':
        await update.message.reply_text(
            "‚ùì –Ø –Ω–µ –æ–∂–∏–¥–∞—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é '–ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, "
            "–∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª –∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –¥–ª—è —Ñ–æ—Ç–æ –∑–∞–ø—Ä–æ—Å–æ–≤
    # –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –Ω–µ—Ç
    if not is_admin(user_id):
        is_allowed, wait_time = check_rate_limit(user_id, "photo")
        if not is_allowed:
            wait_time_rounded = round(wait_time, 1)
            await update.message.reply_text(
                f"‚è± –ú–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –Ω–∞ –ø–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.\n"
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ {wait_time_rounded} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ–æ—Ç–æ."
            )
            return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–¥–µ–ª (–µ—Å–ª–∏ –µ—Å—Ç—å)
    selected_department = context.user_data.get("selected_department", "")
    department_emoji = selected_department.split()[0] if selected_department else "üì∏"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_message = await update.message.reply_text(
        f"{department_emoji} –ù–∞—á–∏–Ω–∞—é –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏...\n"
        "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
    )

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    with TempFileManager() as temp_manager:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ
            if not temp_manager.check_disk_space(min_required_mb=50):
                await processing_message.edit_text(
                    "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                )
                return
                
            # –ü–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –æ—Ç–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º
            context.user_data["state"] = None

            # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
            config = load_config()
            photos_folder = config.get("photos_folder")
            
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø–∞–ø–∫–∏ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
            if not photos_folder:
                logger.error("–û—à–∏–±–∫–∞: –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
                await processing_message.edit_text(
                    "‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: –Ω–µ —É–∫–∞–∑–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                )
                return
                
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –ø–∞–ø–∫–∏ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            if not os.path.exists(photos_folder):
                try:
                    os.makedirs(photos_folder, exist_ok=True)
                    logger.info(f"–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {photos_folder}")
                except Exception as e:
                    logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π: {e}")
                    await processing_message.edit_text(
                        "‚ùå –û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π.\n"
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                    )
                    return
                    
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
            photo = update.message.photo[-1]  # –ë–µ—Ä–µ–º —Å–∞–º—É—é –±–æ–ª—å—à—É—é –≤–µ—Ä—Å–∏—é —Ñ–æ—Ç–æ
            file_id = photo.file_id
            
            # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –æ—Ç Telegram –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            photo_file = await context.bot.get_file(file_id)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º –∏–º–µ–Ω–µ–º
            temp_photo_path = temp_manager.get_temp_file_path(file_id, "jpg")
            await photo_file.download_to_drive(temp_photo_path)
            
            logger.info(f"–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {temp_photo_path}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
            await processing_message.edit_text(
                f"{department_emoji} –§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ, –≤—ã–ø–æ–ª–Ω—è—é –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É..."
            )
            
            # –£–ª—É—á—à–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∏—Å–∫–ª—é—á–µ–Ω–∏–π
            try:
                enhanced_image_path = preprocess_image_for_search(temp_photo_path)
                if enhanced_image_path:
                    logger.info(f"–°–æ–∑–¥–∞–Ω–æ —É–ª—É—á—à–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {enhanced_image_path}")
                    search_image_path = enhanced_image_path
                else:
                    logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª")
                    search_image_path = temp_photo_path
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
                search_image_path = temp_photo_path  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª –ø—Ä–∏ –æ—à–∏–±–∫–µ
                
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
            await processing_message.edit_text(
                f"{department_emoji} –í—ã–ø–æ–ª–Ω—è—é –ø–æ–∏—Å–∫ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π..."
            )
            
            # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥–µ–ª–∏ –∏ –∏–Ω–¥–µ–∫—Å, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
            image_search_functions = get_image_search_functions()
            
            if not image_search_functions:
                logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª–∏ –ø–æ–∏—Å–∫–∞")
                await processing_message.edit_text(
                    "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥–µ–ª–∏ –ø–æ–∏—Å–∫–∞.\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                )
                return
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–µ–∫—Å –ø–æ–∏—Å–∫–∞
            try:
                update_index_result = image_search_functions['update_image_index'](photos_folder)
                if not update_index_result:
                    logger.warning("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –≤–µ—Ä–Ω—É–ª–æ –ø—É—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç, –≤–æ–∑–º–æ–∂–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–∏—Å–∫–æ–º")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∏–Ω–¥–µ–∫—Å–∞: {e}")
                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ –∏–Ω–¥–µ–∫—Å –º–æ–∂–µ—Ç —É–∂–µ –±—ã—Ç—å —Å–æ–∑–¥–∞–Ω
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä–µ–∫—Ç–∞—Ö –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –∏—Å–∫–ª—é—á–µ–Ω–∏–π
            try:
                detected_objects = image_search_functions['detect_tools_on_image'](search_image_path)
                
                # –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
                if detected_objects:
                    logger.info(f"–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {len(detected_objects)} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏")
                else:
                    logger.warning("–ù–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–∏ –æ–±—ä–µ–∫—Ç–æ–≤: {e}")
                detected_objects = None  # –ò—Å–ø–æ–ª—å–∑—É–µ–º None –ø—Ä–∏ –æ—à–∏–±–∫–µ
                
            # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –æ–±—ä–µ–∫—Ç—ã, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –æ—Ç–¥–µ–ª—å–Ω–æ
            if detected_objects and len(detected_objects) > 1:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                await processing_message.edit_text(
                    f"{department_emoji} –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ {len(detected_objects)} –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤! –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∫–∞–∂–¥—ã–π..."
                )
                
                # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–¥–µ–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
                def process_single_object(obj_info, img_path, temp_mgr, photos_dir):
                    try:
                        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ–±—ä–µ–∫—Ç–µ
                        bbox = obj_info.get("bbox")
                        tool_type = obj_info.get("tool_type", "unknown")
                        tool_type_ru = obj_info.get("tool_type_ru", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç")
                        confidence = obj_info.get("confidence", 0.0)
                        
                        # –ò–∑–≤–ª–µ–∫–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                        crop_path = extract_tool_by_bbox(img_path, bbox, temp_mgr)
                        if not crop_path:
                            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –æ–±—ä–µ–∫—Ç —Å bbox {bbox}")
                            return None
                            
                        # –£–ª—É—á—à–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞
                        enhanced_object_path = preprocess_image_for_search(crop_path)
                        search_object_path = enhanced_object_path if enhanced_object_path else crop_path
                        
                        # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
                        results = image_search_functions['find_similar_images'](search_object_path, top_n=3)
                        
                        if not results:
                            logger.warning(f"–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ {tool_type}")
                            return None
                        
                        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –±—Ä–µ–Ω–¥
                        brand = image_search_functions['detect_brand_by_color'](search_object_path)
                        if not brand:
                            brand = image_search_functions['detect_brand_from_filename'](search_object_path)
                            if brand == "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π":
                                brand = None
                        
                        return {
                            'image_path': search_object_path,
                            'results': results[:3],  # –ë–µ—Ä–µ–º —Ç–æ–ª—å–∫–æ —Ç–æ–ø-3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                            'tool_type': tool_type_ru,
                            'brand': brand,
                            'confidence': confidence
                        }
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±—ä–µ–∫—Ç–∞: {e}")
                        return None
                
                # –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –æ–±—ä–µ–∫—Ç—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
                try:
                    object_results = await process_multiple(
                        process_single_object, 
                        detected_objects, 
                        search_image_path, 
                        temp_manager, 
                        photos_folder
                    )
                    
                    # –§–∏–ª—å—Ç—Ä—É–µ–º None —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                    object_results = [r for r in object_results if r is not None]
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±—ä–µ–∫—Ç–æ–≤: {e}")
                    object_results = []
                
                if not object_results:
                    await processing_message.edit_text(
                        "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±–Ω–∞—Ä—É–∂–µ–Ω–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã.\n"
                        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ —Å –¥—Ä—É–≥–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º."
                    )
                    return
                
                # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
                object_results.sort(key=lambda x: x['confidence'], reverse=True)
                
                # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                result_message = f"{department_emoji} –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:\n\n"
                for i, obj_result in enumerate(object_results):
                    tool_type = obj_result['tool_type']
                    brand = obj_result['brand'] if obj_result['brand'] else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
                    confidence = obj_result['confidence'] * 100
                    
                    result_message += f"üîπ –û–±—ä–µ–∫—Ç #{i+1}: {tool_type}\n"
                    result_message += f"  ‚Ä¢ –ë—Ä–µ–Ω–¥: {brand}\n"
                    result_message += f"  ‚Ä¢ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.1f}%\n"
                    
                    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –¥–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                    if obj_result['results']:
                        result_message += "  ‚Ä¢ –ü–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã:\n"
                        for j, (img_path, similarity) in enumerate(obj_result['results'][:3]):
                            file_name = os.path.basename(img_path)
                            similarity_percent = round(similarity * 100)
                            result_message += f"    - {file_name} ({similarity_percent}%)\n"
                    
                    result_message += "\n"
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
                await processing_message.edit_text(result_message)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∞–º—ã—Ö –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
                for i, obj_result in enumerate(object_results):
                    if obj_result['results']:
                        try:
                            top_match_path = obj_result['results'][0][0]
                            caption = f"–û–±—ä–µ–∫—Ç #{i+1}: –õ—É—á—à–µ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ"
                            await update.message.reply_photo(
                                photo=open(top_match_path, 'rb'),
                                caption=caption
                            )
                        except Exception as e:
                            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
                
            else:
                # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ–±—ä–µ–∫—Ç –∏–ª–∏ –æ–±—ä–µ–∫—Ç—ã –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã
                # –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –¥–ª—è –≤—Å–µ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                
                # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                logger.info(f"–ò—Å–ø–æ–ª—å–∑—É—é —É–ª—É—á—à–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞: {search_image_path}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏
                await processing_message.edit_text(
                    f"{department_emoji} –ó–∞–ø—É—Å–∫–∞—é —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π..."
                )
                
                # –ò—â–µ–º –ø–æ—Ö–æ–∂–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
                try:
                    results = image_search_functions['enhanced_image_search'](search_image_path)
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞: {e}")
                    results = []
                
                if not results:
                    await processing_message.edit_text(
                        "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Ö–æ–∂–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\n"
                        "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ —É–≥–æ–ª —Å—ä–µ–º–∫–∏."
                    )
                    return
                    
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
                result_message = f"{department_emoji} –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞:\n\n"
                result_message += f"–ù–∞–π–¥–µ–Ω–æ {len(results)} –ø–æ—Ö–æ–∂–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:\n\n"
                
                for i, (img_path, similarity) in enumerate(results[:5]):
                    file_name = os.path.basename(img_path)
                    similarity_percent = round(similarity * 100)
                    result_message += f"{i+1}. {file_name} - –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {similarity_percent}%\n"
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
                await processing_message.edit_text(result_message)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–ø-3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                for i, (img_path, similarity) in enumerate(results[:3]):
                    try:
                        file_name = os.path.basename(img_path)
                        similarity_percent = round(similarity * 100)
                        caption = f"–°–æ–≤–ø–∞–¥–µ–Ω–∏–µ #{i+1}: {similarity_percent}% - {file_name}"
                        
                        await update.message.reply_photo(
                            photo=open(img_path, 'rb'),
                            caption=caption
                        )
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {e}")
                
            # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –ø–æ–∏—Å–∫
            analytics = context.bot_data.get('analytics')
            if analytics:
                analytics.log_photo_search(user_id, selected_department, bool(results))
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {e}")
            logger.error(traceback.format_exc())
            
            await processing_message.edit_text(
                "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
            
            # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
            analytics = context.bot_data.get('analytics')
            if analytics:
                analytics.log_error("photo_handler", str(e), user_id) 