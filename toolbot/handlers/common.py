"""
–û–±—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞.
"""
import logging
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –∏–∑ utils/access.py
from toolbot.utils.access import is_allowed_user

logger = logging.getLogger(__name__)


async def start_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    """
    user_id = update.effective_user.id
    username = update.effective_user.username or "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    analytics = context.bot_data.get('analytics')
    if analytics:
        analytics.log_command("start", user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ
    if not is_allowed_user(user_id):
        await update.message.reply_text(
            f"‚õî <b>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</b>\n\n"
            f"–í–∞—à ID: <code>{user_id}</code>\n\n"
            f"–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
            parse_mode='HTML'
        )
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    keyboard = [
        ["üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "üì∏ –ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ"],
        ["‚ùì –ü–æ–º–æ—â—å"]
    ]
    
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    await update.message.reply_text(
        f"üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {username}!\n\n"
        f"–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª —Å –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é:\n"
        f"‚Ä¢ üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö\n"
        f"‚Ä¢ üì∏ –ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ - –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é\n"
        f"‚Ä¢ ‚ùì –ü–æ–º–æ—â—å - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ\n\n"
        f"üí° <i>–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é</i>",
        reply_markup=reply_markup,
        parse_mode='HTML'
    )


async def help_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    """
    user_id = update.effective_user.id
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    analytics = context.bot_data.get('analytics')
    if analytics:
        analytics.log_command("help", user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ
    if not is_allowed_user(user_id):
        await show_error_message(update, "access_denied")
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å–ø—Ä–∞–≤–∫–∏
    help_text = (
        "*‚ùì –°–ü–†–ê–í–û–ß–ù–ê–Ø –ò–ù–§–û–†–ú–ê–¶–ò–Ø –ü–û –ë–û–¢–£*\n\n"
        "*–û –ë–û–¢–ï:*\n"
        "–î–∞–Ω–Ω—ã–π Telegram-–±–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤. "
        "–° –µ–≥–æ –ø–æ–º–æ—â—å—é –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–π —Ç–æ–≤–∞—Ä –ø–æ —Ñ–æ—Ç–æ, –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö, "
        "–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º —Å–∫–æ–±—è–Ω—ã—Ö –∏–∑–¥–µ–ª–∏–π –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.\n\n"
        
        "*–û–°–ù–û–í–ù–´–ï –ö–û–ú–ê–ù–î–´:*\n"
        "‚Ä¢ /start - –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "‚Ä¢ /help - –≤—ã–∑–æ–≤ —ç—Ç–æ–π —Å–ø—Ä–∞–≤–∫–∏\n"
        "‚Ä¢ /stop - –æ—Ç–º–µ–Ω–∞ —Ç–µ–∫—É—â–µ–π –æ–ø–µ—Ä–∞—Ü–∏–∏\n\n"
        
        "*–û–°–ù–û–í–ù–´–ï –†–ê–ó–î–ï–õ–´:*\n"
        "‚Ä¢ üìû *–ö–æ–Ω—Ç–∞–∫—Ç—ã* - –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –º–∞–≥–∞–∑–∏–Ω–∞—Ö, –ª–æ–≥–∏—Å—Ç–∏–∫–µ –∏ –¥—Ä—É–≥–∏–º –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–º –¥–∞–Ω–Ω—ã–º\n"
        "‚Ä¢ üì∏ *–ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ* - –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ —Å –ø–æ–º–æ—â—å—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
        "‚Ä¢ ‚ùì *–ü–æ–º–æ—â—å* - –¥–∞–Ω–Ω–∞—è —Å–ø—Ä–∞–≤–∫–∞\n\n"
        
        "*–†–ê–ó–î–ï–õ –ö–û–ù–¢–ê–ö–¢–´:*\n"
        "‚Ä¢ üè™ *–ú–∞–≥–∞–∑–∏–Ω—ã* - –∞–¥—Ä–µ—Å–∞ –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã –º–∞–≥–∞–∑–∏–Ω–æ–≤\n"
        "‚Ä¢ üó∫ *–ö–∞—Ä—Ç—ã* - —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –Ω–∞ –∫–∞—Ä—Ç–µ\n"
        "‚Ä¢ üîß *–°–∫–æ–±—è–Ω–∫–∞* - —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫ –ø–æ —Å–∫–æ–±—è–Ω—ã–º –∏–∑–¥–µ–ª–∏—è–º\n\n"
        
        "*–ü–û–ò–°–ö –ü–û –§–û–¢–û:*\n"
        "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä—ã, —Å—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä–æ–≤–∞–≤ –∏—Ö. –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n"
        "1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É üì∏ *–ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ*\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å —Ç–æ–≤–∞—Ä\n"
        "3. –°–¥–µ–ª–∞–π—Ç–µ —á–µ—Ç–∫—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é —Ç–æ–≤–∞—Ä–∞ –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É\n"
        "4. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞\n\n"
        
        "*–°–û–í–ï–¢–´ –ü–û –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ:*\n"
        "‚Ä¢ –î–ª—è –ª—É—á—à–µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –¥–µ–ª–∞–π—Ç–µ —Ñ–æ—Ç–æ –ø—Ä–∏ —Ö–æ—Ä–æ—à–µ–º –æ—Å–≤–µ—â–µ–Ω–∏–∏\n"
        "‚Ä¢ –°—Ç–∞—Ä–∞–π—Ç–µ—Å—å –¥–µ—Ä–∂–∞—Ç—å –∫–∞–º–µ—Ä—É –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Ç–æ–≤–∞—Ä—É\n"
        "‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ —Ç–µ–Ω–µ–π –∏ –±–ª–∏–∫–æ–≤ –Ω–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
        "‚Ä¢ –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç–µ –Ω—É–∂–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –æ—Ç–¥–µ–ª –∏–ª–∏ —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ —Å –¥—Ä—É–≥–æ–≥–æ —Ä–∞–∫—É—Ä—Å–∞\n\n"
        
        "*–ù–ê–í–ò–ì–ê–¶–ò–Ø:*\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ –º–µ–∂–¥—É —Ä–∞–∑–¥–µ–ª–∞–º–∏\n"
        "‚Ä¢ –ö–Ω–æ–ø–∫–∞ üîô *–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é* –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∏–∑ –ª—é–±–æ–≥–æ —Ä–∞–∑–¥–µ–ª–∞\n"
        "‚Ä¢ –ö–æ–º–∞–Ω–¥–∞ /stop –æ—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é\n\n"
        
        "*–û–ë–†–ê–¢–ù–ê–Ø –°–í–Ø–ó–¨:*\n"
        "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è —Å–≤—è–∑–∏ —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞–º–∏\n"
        "‚Ä¢ –°–æ–æ–±—â–∞–π—Ç–µ –æ–± –æ—à–∏–±–∫–∞—Ö –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞\n"
        "‚Ä¢ –ü—Ä–µ–¥–ª–∞–≥–∞–π—Ç–µ –Ω–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —É–ª—É—á—à–µ–Ω–∏—è\n\n"
        
        "üí° –ú—ã –≤—Å–µ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã –ø–æ–º–æ—á—å –∏ —É–ª—É—á—à–∏—Ç—å —Ä–∞–±–æ—Ç—É –±–æ—Ç–∞!"
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    keyboard = [
        ["üêõ –°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ", "üí° –ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ"],
        ["üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø—Ä–∞–≤–∫—É
    await update.message.reply_text(
        help_text,
        parse_mode='Markdown',
        reply_markup=reply_markup
    )


async def stop_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stop - –æ—Ç–º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    """
    user_id = update.effective_user.id
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    analytics = context.bot_data.get('analytics')
    if analytics:
        analytics.log_command("stop", user_id)
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if 'state' in context.user_data:
        del context.user_data['state']
    
    if 'awaiting_photo' in context.user_data:
        context.user_data['awaiting_photo'] = False
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    await update.message.reply_text(
        "‚úÖ –¢–µ–∫—É—â–∞—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.",
        reply_markup=ReplyKeyboardMarkup([
            ["üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "üì∏ –ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ"],
            ["‚ùì –ü–æ–º–æ—â—å"]
        ], resize_keyboard=True)
    )


async def back_to_menu_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    """
    user_id = update.effective_user.id
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
    analytics = context.bot_data.get('analytics')
    if analytics:
        analytics.log_command("back_to_menu", user_id)
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—Å–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if 'state' in context.user_data:
        del context.user_data['state']
    if 'awaiting_photo' in context.user_data:
        context.user_data['awaiting_photo'] = False
    if 'selected_department' in context.user_data:
        del context.user_data['selected_department']
    
    # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start –¥–ª—è –ø–æ–∫–∞–∑–∞ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
    await start_handler(update, context)


async def show_error_message(update: Update, error_type="general"):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
    
    Args:
        update: –û–±—ä–µ–∫—Ç Update –æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º–∞
        error_type: –¢–∏–ø –æ—à–∏–±–∫–∏ (access_denied, invalid_command, general)
    """
    error_messages = {
        "access_denied": "‚õî *–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω*\n\n–í—ã –Ω–µ –∏–º–µ–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –±–æ—Ç—É.\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.",
        "invalid_command": "‚ùå *–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞*\n\n–í–≤–µ–¥–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.",
        "general": "‚ùå *–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
    }
    
    message = error_messages.get(error_type, error_messages["general"])
    
    await update.message.reply_text(
        message,
        parse_mode='Markdown'
    ) 