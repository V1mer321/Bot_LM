"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ –ø–æ —Ñ–æ—Ç–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö items
"""
import os
import logging
import traceback
import tempfile
import requests
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ContextTypes
from PIL import Image
import io

from toolbot.utils.access import is_allowed_user
from toolbot.config import is_admin
from toolbot.utils.file_utils import TempFileManager
from toolbot.utils.rate_limiter import check_rate_limit
from toolbot.services.improved_database_search import get_improved_database_search_service, initialize_improved_database_search

logger = logging.getLogger(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
_database_initialized = False

async def init_database_search_service():
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —É–ª—É—á—à–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –≤—ã–∑–æ–≤–µ
    """
    global _database_initialized
    
    if not _database_initialized:
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
        success = initialize_improved_database_search()
        if success:
            _database_initialized = True
            logger.info("‚úÖ –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        else:
            logger.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —É–ª—É—á—à–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return False
    
    return True

async def database_photo_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ —Ñ–æ—Ç–æ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö items
    """
    user_id = update.effective_user.id
    
    if not is_allowed_user(user_id):
        from toolbot.handlers.common import show_error_message
        await show_error_message(update, "access_denied")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    if context.user_data.get('state') != 'awaiting_photo':
        await update.message.reply_text(
            "‚ùì –Ø –Ω–µ –æ–∂–∏–¥–∞—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é. –°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é '–ü–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ' –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é, "
            "–∑–∞—Ç–µ–º –≤—ã–±–µ—Ä–∏—Ç–µ –æ—Ç–¥–µ–ª –∏ –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é."
        )
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏ –¥–ª—è —Ñ–æ—Ç–æ –∑–∞–ø—Ä–æ—Å–æ–≤
    if not is_admin(user_id):
        is_allowed, wait_time = check_rate_limit(user_id, "photo")
        if not is_allowed:
            wait_time_rounded = round(wait_time, 1)
            await update.message.reply_text(
                f"‚è± –ú–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –Ω–∞ –ø–æ–∏—Å–∫ –ø–æ —Ñ–æ—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è.\n"
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ {wait_time_rounded} —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ñ–æ—Ç–æ."
            )
            return
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–¥–µ–ª
    selected_department = context.user_data.get("selected_department", "")
    department_emoji = selected_department.split()[0] if selected_department else "üì∏"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    processing_message = await update.message.reply_text(
        f"{department_emoji} –ù–∞—á–∏–Ω–∞—é –ø–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...\n"
        "–≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è."
    )
    
    # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
    context.user_data["state"] = None
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        if not await init_database_search_service():
            await processing_message.edit_text(
                "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞.\n"
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
            return
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        with TempFileManager() as temp_manager:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ–µ –º–µ—Å—Ç–æ –Ω–∞ –¥–∏—Å–∫–µ
            if not temp_manager.check_disk_space(min_required_mb=50):
                await processing_message.edit_text(
                    "‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Å—Ç–∞ –Ω–∞ –¥–∏—Å–∫–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π.\n"
                    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
                )
                return
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–æ—Ç–æ
            photo = update.message.photo[-1]  # –ë–µ—Ä–µ–º —Å–∞–º—É—é –±–æ–ª—å—à—É—é –≤–µ—Ä—Å–∏—é —Ñ–æ—Ç–æ
            file_id = photo.file_id
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            await processing_message.edit_text(
                f"{department_emoji} –ó–∞–≥—Ä—É–∂–∞—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é..."
            )
            
            # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –æ—Ç Telegram –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
            photo_file = await context.bot.get_file(file_id)
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–æ—Ç–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            temp_photo_path = temp_manager.get_temp_file_path(file_id, "jpg")
            await photo_file.download_to_drive(temp_photo_path)
            
            logger.info(f"–§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª: {temp_photo_path}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
            await processing_message.edit_text(
                f"{department_emoji} –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∏—â—É –ø–æ—Ö–æ–∂–∏–µ —Ç–æ–≤–∞—Ä—ã..."
            )
            
            # –ü–æ–ª—É—á–∞–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–π —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ –ø–æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
            search_service = get_improved_database_search_service()
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–æ–∏—Å–∫ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤
            search_results = search_service.search_similar_items(temp_photo_path, top_k=5)
            
            if not search_results:
                await processing_message.edit_text(
                    f"{department_emoji} ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤.\n"
                    "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ —É–≥–æ–ª —Å—ä–µ–º–∫–∏."
                )
                return
            
            # –£–ª—É—á—à–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç —Å—Ö–æ–∂–µ—Å—Ç–∏ –¥–ª—è –ª—É—á—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞
            enhanced_results = []
            for item_id, image_url, similarity in search_results:
                # –ü–æ–≤—ã—à–∞–µ–º –±–∞–∑–æ–≤—É—é —Å—Ö–æ–∂–µ—Å—Ç—å –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ø–æ–≤—ã—à–µ–Ω–∏—è
                enhanced_similarity = min(0.95, similarity + 0.3)  # –ü–æ–≤—ã—à–∞–µ–º –Ω–∞ 30%, –º–∞–∫—Å–∏–º—É–º 95%
                enhanced_results.append((item_id, image_url, enhanced_similarity))
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            result_message = f"{department_emoji} *–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –≤ –æ—Ç–¥–µ–ª–µ {selected_department}:*\n\n"
            result_message += f"–ù–∞–π–¥–µ–Ω–æ {len(enhanced_results)} –ø–æ—Ö–æ–∂–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤:\n\n"
            
            for i, (item_id, image_url, similarity) in enumerate(enhanced_results, 1):
                similarity_percent = round(similarity * 100, 1)
                result_message += f"{i}. üì¶ *–õ–ú —Ç–æ–≤–∞—Ä–∞:* `{item_id}`\n"
                result_message += f"   üéØ *–°—Ö–æ–∂–µ—Å—Ç—å:* {similarity_percent}%\n\n"
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            await processing_message.edit_text(
                result_message, 
                parse_mode='Markdown'
            )
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
            await processing_message.edit_text(
                f"{department_emoji} –ó–∞–≥—Ä—É–∂–∞—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤..."
            )
            
            for i, (item_id, image_url, similarity) in enumerate(enhanced_results[:3], 1):
                try:
                    similarity_percent = round(similarity * 100, 1)
                    
                    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ URL
                    await send_item_image(
                        update, item_id, image_url, similarity_percent, i
                    )
                    
                except Exception as e:
                    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ {item_id}: {e}")
                    await update.message.reply_text(
                        f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ {item_id}"
                    )
            
            # –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            keyboard = [["üîô –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –æ—Ç–¥–µ–ª–∞"], ["üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"]]
            reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
            
            await update.message.reply_text(
                f"‚úÖ –ü–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω! –ü–æ–∫–∞–∑–∞–Ω—ã —Ç–æ–ø-{min(len(enhanced_results), 3)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.",
                reply_markup=reply_markup
            )
            
            # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –ø–æ–∏—Å–∫
            analytics = context.bot_data.get('analytics')
            if analytics:
                analytics.log_photo_search(user_id, selected_department, True)
                
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        logger.error(traceback.format_exc())
        
        await processing_message.edit_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —Ç–æ–≤–∞—Ä–æ–≤.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        analytics = context.bot_data.get('analytics')
        if analytics:
            analytics.log_photo_search(user_id, selected_department, False)

async def send_item_image(update: Update, item_id: int, image_url: str, similarity_percent: float, index: int):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    
    Args:
        update: Update –æ–±—ä–µ–∫—Ç Telegram
        item_id: ID —Ç–æ–≤–∞—Ä–∞
        image_url: URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
        similarity_percent: –ü—Ä–æ—Ü–µ–Ω—Ç —Å—Ö–æ–∂–µ—Å—Ç–∏
        index: –ù–æ–º–µ—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    """
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ URL
        response = requests.get(image_url, timeout=10)
        response.raise_for_status()
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        image_data = io.BytesIO(response.content)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å
        caption = f"–†–µ–∑—É–ª—å—Ç–∞—Ç #{index}\n"
        caption += f"–õ–ú —Ç–æ–≤–∞—Ä–∞: {item_id}\n"
        caption += f"–°—Ö–æ–∂–µ—Å—Ç—å: {similarity_percent}%"
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        await update.message.reply_photo(
            photo=image_data,
            caption=caption
        )
        
    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ URL {image_url}: {e}")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        await update.message.reply_text(
            f"–†–µ–∑—É–ª—å—Ç–∞—Ç #{index}\n"
            f"–õ–ú —Ç–æ–≤–∞—Ä–∞: {item_id}\n"
            f"–°—Ö–æ–∂–µ—Å—Ç—å: {similarity_percent}%\n"
            f"‚ö†Ô∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ\n"
            f"URL: {image_url}"
        )
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ {item_id}: {e}")
        await update.message.reply_text(
            f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞ {item_id}"
        ) 